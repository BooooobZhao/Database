"0","doTransfer <- function (dbcon, tracksid, trackitemsid, amount)"
"0","{"
"0","  txnFailed = FALSE"
"0","  "
"0","  dbExecute(dbcon, ""BEGIN TRANSACTION"")"
"0",""
"0","  # Change the price in tracks table"
"0","  sql <- ""UPDATE tracks"
"0","             SET UnitPrice = UnitPrice + ?"
"0","           WHERE TrackId = ?"""
"0","  ps <- dbSendStatement(dbcon, sql,"
"0","                        params = list(amount, tracksid))"
"0","  if (dbGetRowsAffected(ps) < 1)"
"0","    txnFailed = TRUE"
"0","  dbClearResult(ps)"
"0",""
"0","  # credit destination account"
"0","  sql <- ""UPDATE invoice_items"
"0","             SET UnitPrice = UnitPrice + ?"
"0","           WHERE InvoiceLineId = ?"""
"0","  ps <- dbSendStatement(dbcon, sql,"
"0","                        params = list(amount, trackitemsid))"
"0","  if (dbGetRowsAffected(ps) < 1)"
"0","    txnFailed = TRUE"
"0","  dbClearResult(ps)"
"0","  "
"0","  # add accounting transaction to log"
"0","  sql <- ""INSERT INTO journal "
"0","           (TrackId,amount,change_date) "
"0","          VALUES (?, ?, date('now'))"""
"0","  ps <- dbSendStatement(dbcon, sql,"
"0","                        params = list(tracksid, amount))"
"0","  if (dbGetRowsAffected(ps) < 1)"
"0","    txnFailed = TRUE"
"0","  dbClearResult(ps)"
"0","  "
"0","  # Check if the price is greater than 0"
"0","  sql <- ""SELECT UnitPrice FROM tracks"
"0","           WHERE TrackId = ?"""
"0","  ps <- dbSendStatement(dbcon, sql, params = tracksid)"
"0","  result <- dbFetch(ps)"
"0","  for(each in result$UnitPrice) {"
"0","    if (each < 0)"
"0","      txnFailed = TRUE"
"0","  }"
"0","  dbClearResult(ps)"
"0","  "
"0","  sql <- ""SELECT UnitPrice FROM invoice_items"
"0","           WHERE InvoiceLineId = ?"""
"0","  ps <- dbSendStatement(dbcon, sql, params = trackitemsid)"
"0","  result <- dbFetch(ps)"
"0","  for(each in result$UnitPrice) {"
"0","    if (each < 0)"
"0","      txnFailed = TRUE"
"0","  }"
"0","  dbClearResult(ps)"
"0","  "
"0","  # commit transaction if no failure, otherwise rollback"
"0","  if (txnFailed == TRUE)"
"0","    dbExecute(dbcon, ""ROLLBACK TRANSACTION"")"
"0","  else"
"0","    dbExecute(dbcon, ""COMMIT TRANSACTION"")"
"0",""
"0","  # return status; TRUE if successful; FALSE if failed"
"0","  return (!txnFailed)"
"0","}"
