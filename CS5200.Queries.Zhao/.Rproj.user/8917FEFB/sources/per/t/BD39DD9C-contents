---
title: "Query a Database with SQL"
output: html_notebook
---

```{r}
library(RSQLite)

fpath = ""
dbfile = "MediaDB.db"
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
```

```{sql connection=dbcon}
/* Q1: What are the last name, city, state, and country of all customers who made at least one purchase and live either in Brazil or Canada? Do not list duplicates. */

SELECT DISTINCT LastName, City, State, Country FROM customers,invoices
  WHERE customers.CustomerId = invoices.CustomerId AND customers.Country IN ("Brazil", "Canada") 

```

```{sql connection=dbcon}
/* Q2: What are the titles of each album and the number of tracks on each album? */

SELECT Title, COUNT(tracks.trackId) AS trackNumber
  FROM albums JOIN tracks USING (AlbumId)
  GROUP BY albums.Title
```

```{sql connection=dbcon}
/* Q3: List the number of tracks by genre, ordered from most to least, restricted to those genres for which there are at least five tracks.*/

SELECT genres.Name AS genresName, COUNT(tracks.TrackId) AS trackNumber
  FROM genres JOIN tracks USING (GenreId)
  GROUP BY genres.GenreId
    HAVING trackNumber > 4
  ORDER BY trackNumber DESC
```

```{sql connection=dbcon}
/* Q4: What is the average "tenure" of the employees in months? */

SELECT ROUND(AVG(cast((strftime('%Y', 'now') - strftime('%Y', e.HireDate)) * 12 + (strftime('%m', 'now') - strftime('%m', e.HireDate)) AS float)), 0) AS avgAge
  FROM employees e
```

```{sql connection=dbcon}
/* Q5: What are the total number of unique customers for each Brazilian state, ordered alphabetically by state, who made at least one purchase (i.e., do not consider customers who never made a purchase)? */

SELECT c.state, COUNT(DISTINCT c.CustomerId) AS totalNumber
  FROM customers c JOIN invoices USING (CustomerId)
  WHERE c.country = "Brazil"
  GROUP BY c.state
```

```{sql connection=dbcon}
/* Q6: How many customers never made a purchase, i.e., they appear in the customers table but not in the invoices table. */

SELECT COUNT(Customerid) AS customerNumber
  FROM customers
  WHERE CustomerId NOT IN (SELECT customerid FROM invoices)
```

```{sql connection=dbcon}
/* Q7: How many albums contain the substring "symphony" in the album title? */

SELECT COUNT(Title) AS SymphonyNumber
  FROM albums
  WHERE Title LIKE '%symphony%'
```

```{sql connection=dbcon}
/* Q8: What is the total "time" of all tracks per artist in hours, i.e., add up the "Milliseconds" column in tracks? Display the artist's name and the time in hours rounded to two decimals. Only consider artists who published at least one track. */

SELECT artists.Name AS Name, ROUND((SUM(tracks.milliseconds)/3600000.00), 2) AS totalHours 
  FROM albums
    JOIN artists USING (ArtistId)
    JOIN tracks USING (AlbumId)
  GROUP BY artists.Name
```

```{sql connection=dbcon}
/* Q9: Which playlists are the longest (greater than 0), regardless of type and format? List the playlist name(s) and the time in two columns: one for hours and one for minutes. */

SELECT Name, Hours, Mins FROM
  (SELECT playlists.Name, SUM(tracks.milliseconds)/3600000 AS Hours, (SUM(tracks.milliseconds)%3600000)/60000 AS Mins
    FROM playlists
      JOIN playlist_track USING (PlaylistId)
      JOIN tracks USING (TrackId)
    GROUP BY playlistId
    HAVING SUM(tracks.milliseconds) > 0
      AND SUM(tracks.milliseconds) >= 
        (SELECT SUM(tracks.milliseconds)
          FROM playlists
            JOIN playlist_track USING (PlaylistId)
            JOIN tracks USING (TrackId)
          GROUP BY playlistId))
    
```

```{sql connection=dbcon}
/* Q10: Which artists have composed tracks in more than three different genres? List the artists name and the number of distinct genres they have compositions in. Do not list duplicates. */

SELECT artist, genreNumber FROM
  (SELECT artists.Name AS artist, COUNT(DISTINCT genres.GenreId) AS genreNumber
    FROM artists
      JOIN albums USING (artistid)
      JOIN tracks USING (AlbumId)
      JOIN genres USING (GenreId)
    GROUP BY artist)
  WHERE genreNumber > 3
```

```{r}
dbDisconnect(dbcon)
```